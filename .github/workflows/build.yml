name: Deploy Spring Boot App to EC2 (Docker + RDS)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      RDS_URL: ${{ secrets.RDS_URL }}
      RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
      RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
      RDS_DIALECT: ${{ secrets.RDS_DIALECT }}

    steps:
      # 1. 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # 4. 빌드 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. DockerHub 로그인
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_REPO }}

      # 7. EC2 배포 (SSH 연결 후 컨테이너 실행)
      - name: Deploy to EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker rm -f $(docker ps -qa) || true
            docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker compose /home/ubuntu/app/docker-compose.yml down || true
            sudo docker compose /home/ubuntu/app/docker-compose.yml up -d
            sudo docker image prune -f